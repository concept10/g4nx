/* autogenerated by generator-matrix.js */

#pragma once

#include <nan.h>
#include <node.h>
#include <girepository.h>
#include <glib.h>
#include <cairo.h>

namespace GNodeJS {

namespace Cairo {


class Matrix: public Nan::ObjectWrap {
  public:
    static Nan::Persistent<v8::FunctionTemplate> constructorTemplate;
    static Nan::Persistent<v8::Function>         constructor;
    static void Initialize(Nan::ADDON_REGISTER_FUNCTION_ARGS_TYPE target);
    static void SetupTemplate();
    static Local<v8::FunctionTemplate> GetTemplate();
    static Local<v8::Function> GetConstructor();

    static NAN_METHOD(New);

    static NAN_METHOD(initIdentity);
    static NAN_METHOD(initTranslate);
    static NAN_METHOD(initScale);
    static NAN_METHOD(initRotate);
    static NAN_METHOD(translate);
    static NAN_METHOD(scale);
    static NAN_METHOD(rotate);
    static NAN_METHOD(invert);
    static NAN_METHOD(multiply);
    static NAN_METHOD(transformDistance);
    static NAN_METHOD(transformPoint);

    Matrix(cairo_matrix_t* data);
    ~Matrix();

    cairo_matrix_t* _data;
};


}; // Cairo

}; // GNodeJS